import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


boston=pd.read_csv("HousingData.csv")

boston.head()

boston.info()

boston.shape
boston.describe()


boston.dtypes

boston.isnull().sum()
boston["CRIM"].fillna(boston["CRIM"].mean(),inplace=True)
boston["ZN"].fillna(boston["ZN"].mean(),inplace=True)
boston["INDUS"].fillna(boston["INDUS"].mean(),inplace=True)
boston["CHAS"].fillna(boston["CHAS"].mean(),inplace=True)
boston["AGE"].fillna(boston["AGE"].mean(),inplace=True)
boston["LSTAT"].fillna(boston["LSTAT"].mean(),inplace=True)

boston.isnull().sum()

corr = boston.corr()
corr.shape

plt.figure(figsize=(10,10))
sns.heatmap(corr, cbar=True, square= True, fmt='.1f', annot=True, annot_kws={'size':15}, cmap='Greens')


X = boston.drop(['MEDV'], axis = 1)
y = boston['MEDV']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.3, random_state = 4)


from sklearn.linear_model import LinearRegression
lm = LinearRegression()
lm.fit(X_train, y_train)

from sklearn import metrics
print('R^2:',metrics.r2_score(y_train, y_pred))
print('MAE:',metrics.mean_absolute_error(y_train, y_pred))
print('MSE:',metrics.mean_squared_error(y_train, y_pred))


plt.scatter(y_train, y_pred)
plt.xlabel("Prices")
plt.ylabel("Predicted prices")
plt.title("Prices vs Predicted prices")
plt.show()

# Checking residuals
plt.scatter(y_pred,y_train-y_pred)
plt.title("Predicted vs residuals")
plt.xlabel("Predicted")
plt.ylabel("Residuals")
plt.show()


